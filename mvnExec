#!/bin/bash

#
# Execute clases with main method inside maven project.
#

SET_PARAMS="yes"
BUILD="yes"
SEARCH_MAIN="yes"
SEARCH_TEST="yes"

if [ -n "$mvnExec_DEBUG" ]
then
   set -x
fi

function help {
   cat >&2 <<EOF

$0 [options] [args]

Execute clases with main method inside maven project.

Options
   -P, --no-parameters   Don't ask for parameters
   -q, --quiet           Be quiet. Don't show [INFO] messages from maven
   -B, --no-build        Avoid building. 
   -M, --no-main         Don't search on src/main/java
   -T, --no-test         Don't search on src/test/java
Examples:

 $ mvnExec
 $ mvnExec -P
 $ mvnExec -PqB

EOF
}

function errorJavaExecutable() {
   echo cannot locate java. Set JDK_HOME or JAVA_HOME or add java to path.
   exit 1
}

function testJavaExec() {
   test -x "$1/bin/java"
}

function setJavaExecutable() {
   if [ -z "$1" ] || ! testJavaExec "$1"
   then
      errorJavaExecutable
   else
      JAVA="$1/bin/java"
   fi
}

function findMainClasses() {
   if [ -d $1 ]
   then
      grep " main *(" -R $1/* --exclude-dir=.git --exclude-dir=.svn --exclude-dir=.cvs --include=*.java | \
          cut -d ':' -f 1 | sed 's+'$1'/++;s/.java$//' | tr / . | sort
   fi
}

function dependencyClasspath() {
   IFS=. read major minor extra < <($JAVA -version |& awk -F '"' '/version/ {print $2}') 
   if [ "$major" == 1 ] && [[ "$minor" > 5 ]]
   then
      echo 'target/dependency/*'
   else
      for i in target/dependency/*.jar
      do 
        echo -n $i:
      done | sed 's/:$//'
   fi
}

TEMP=$(getopt -o "PqBMTh" -l no-parameters,quiet,no-build,no-main,no-test,help -n $(basename $0) -- "$@")
EXIT=$?
if [ $EXIT != 0 ]
then
    help
    exit $EXIT
fi

# process script arguments
eval set -- "$TEMP"

while true
do
   case "$1" in
      -P|--no-parameters)
         SET_PARAMS=
         ;;
      -B|--no-build) 
         BUILD="no" 
         ;;
      -q|--quiet) 
         QUIET="-q" 
         ;;
      -M|--no-main)
         SEARCH_MAIN="no"
         ;;
      -T|--no-test)
         SEARCH_TEST="no"
         ;;
      -h|--help) 
         help 
         exit
         ;;
      --) 
         shift
         break ;;
      *) 
         cat <&2 <<EOF

Error, unknow arguments $1
EOF
         help
         exit 1 
         ;;
   esac
   shift
done

if [ -n "$JDK_HOME" ]
then
   setJavaExecutable "$JDK_HOME"
elif [ -n "$JAVA_HOME" ]
then
   setJavaExecutable "$JAVA_HOME"
elif command -v java >&-
then
   JAVA=$(command -v java >&-)
else
   errorJavaExecutable
fi


if [ $SEARCH_MAIN == "yes" ]
then
   MAINCLASSES=$(findMainClasses src/main/java)
fi

if [ $SEARCH_TEST == "yes" ]
then
   TESTCLASSES=$(findMainClasses src/test/java)
fi

FOUNDCLASSES=$MAINCLASSES$TESTCLASSES

if [ -z "$FOUNDCLASSES" ] 
then
   echo no classes with main method in $PWD
   echo   
   exit 1
fi

select CLASS in ${FOUNDCLASSES}
do
	if [ -z "$CLASS" ]
	then
		if [ "$REPLY" == "salir" ] 
		then
			break
		else
			echo unknow option
			continue
		fi
	fi
    if [ -n "$SET_PARAMS" ]
    then
	   echo set parameters:
	   read -e ARGS
	   if [ -n "$ARGS" ]
	   then 
	        ARGS=" $ARGS"
	   fi
    fi
    if [ "$BUILD" == "yes" ]
    then
       echo compiling and getting dependencies
       mvn $QUIET clean install dependency:copy-dependencies
    fi
    echo executing
    mvn $QUIET exec:exec -Dexec.executable="$JAVA" -Dexec.workingdir="." \
        -Dexec.args="-cp target/classes:target/test-classes:$(dependencyClasspath) ${CLASS}${ARGS} $*" 
	break
done
